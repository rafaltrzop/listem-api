openapi: 3.0.2

info:
  title: Listem API
#  description: API description
  version: 0.0.0

servers:
  - url: /api
#    description: Server description

#tags:
#  - name: abc
#    description: Everything about your Pets
#    externalDocs:
#      url: http://docs.my-api.com/pet-operations.htm
#  - name: xyz
#    description: Access to Petstore orders
#    externalDocs:
#      url: http://docs.my-api.com/store-orders.htm

paths:
  /auth:
    post:
#      tags:
#        - xyz
#        - abc
      summary: Authenticate user
#      description: Endpoint desc relevant to all operations in this path
      requestBody:
        $ref: '#/components/requestBodies/UserCredentials'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: Access token (JWT)
#                    example:
#                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                    required:
                      - token
                required:
                  - data
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users:
    post:
      summary: Create a user account
      requestBody:
        $ref: '#/components/requestBodies/UserCredentials'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          email:
                            type: string
                        required:
                          - id
                          - email
                    required:
                      - user
                required:
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  requestBodies:
    UserCredentials:
      description: User credentials
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
#          example:
#            email: email@address.com
#            password: paSSw0rd
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: Error message
              detail:
                type: string
                description: Stack trace
            required:
              - title
      required:
        - errors
