openapi: 3.0.3

info:
  title: Listem API
  #description: API description
  version: 0.0.0

servers:
  - url: /api
#    description: Server description

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: auth
    description: Authentication endpoints
  - name: users
    description: Users endpoints

# TODO: split to multiple files
paths:
  /auth:
    post:
      tags:
        - auth
      summary: Authenticate user
      #description: Endpoint desc relevant to all operations in this path
      security: []
      requestBody:
        $ref: '#/components/requestBodies/UserCredentials'
      responses:
        '200':
          $ref: '#/components/responses/Tokens'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /auth/token:
    post:
      tags:
        - auth
      summary: Refresh access token
      security: []
      # TODO: create schema for below request body
      requestBody:
        description: Tokens for exchange
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  description: Access token (JWT)
                refreshToken:
                  type: string
                  description: Refresh token (UUID)
              required:
                - accessToken
                - refreshToken
      # TODO: add more responses
      responses:
        '200':
          $ref: '#/components/responses/Tokens'
  /users:
    post:
      tags:
        - users
      summary: Create a user account
      security: []
      requestBody:
        $ref: '#/components/requestBodies/UserCredentials'
      responses:
        '201':
          description: Created user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          email:
                            type: string
                        required:
                          - id
                          - email
                    required:
                      - user
                required:
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  # TODO: remove later
  /foo/bar:
    get:
      responses:
        '200':
          description: OK

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: query
      name: accessToken
  requestBodies:
    UserCredentials:
      description: User credentials
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
  responses:
    Tokens:
      description: Tokens
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: Access token (JWT)
                  refreshToken:
                    type: string
                    description: Refresh token (UUID)
                required:
                  - accessToken
                  - refreshToken
            required:
              - data
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: Error message
              detail:
                type: string
                description: Stack trace
            required:
              - title
      required:
        - errors
